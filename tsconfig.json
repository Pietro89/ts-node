{
   "ts-node": {
      // Do not forget to `npm i -D tsconfig-paths`
      "require": ["tsconfig-paths/register"]
   },
   "baseDir": "./", /* Base directory to resolve non-relative module names. */
   "compilerOptions": {
      /* Basic Options */
      "target": "ES2020", /* Set the JavaScript version for emitted JavaScript and include compatible lib files. */
      "module": "commonjs", /* Node.js uses CommonJS modules, so we set this to match. */
      "lib": ["ES2020"], /* Include typings for ES2020 lib features. */
      "allowJs": true, /* Allow JavaScript files to be compiled. */
      "outDir": "./dist", /* Redirect output structure to the 'dist' directory. */
      "rootDir": "./", /* Specify the root directory of input files. */
      "removeComments": true, /* Do not emit comments to output. */
      "strict": true, /* Enable all strict type-checking options. */

      /* Module Resolution Options */
      "moduleResolution": "node", /* Choose the module resolution strategy: 'node' for Node.js. */
      "baseUrl": "./", /* Base directory to resolve non-relative module names. */
      /* Experimental Options */
      "experimentalDecorators": true, /* Enables experimental support for ES decorators. */
      "emitDecoratorMetadata": true, /* Enables experimental support for emitting type metadata for decorators. */
      "paths": {
         "@*": ["src/*"] /* Map paths to base directories. */
      },

      /* Advanced Options */
      "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules. */
      "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
      "skipLibCheck": true /* Skip type checking of declaration files. */
   },
   "include": [
      "src/**/*"
   ],
   "exclude": [
      "node_modules", /* Don't include anything from node_modules in the compilation. */
      "**/*.spec.ts", /* Exclude test files from the compilation output (if you're using a separate process for tests). */
      "dist" /* Exclude the output directory from the compilation input. */
   ]
}
